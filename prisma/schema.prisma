// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SessionStatus {
  ACTIVE
  COMPLETED
  CANCELED
}

//host date time in UTC time.
model Session {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  sessionMessageId String        @unique @map("session_message_id")
  sessionName      String        @map("session_name")
  sessionDate      DateTime      @map("session_date")
  users            PartyMember[]

  @@map("session")
}

model User {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username      String
  userChannelId String        @unique @map("user_channel_id")
  sessions      PartyMember[]

  @@map("user")
}

model PartyMember {
  sessionId String  @map("session_id") @db.Uuid
  session   Session @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  userId    String  @map("user_id") @db.Uuid
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  role      String

  @@id(fields: [sessionId, userId], name: "party_member_id")
  @@map("party_member")
}
